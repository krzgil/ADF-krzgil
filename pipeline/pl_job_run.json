{
	"name": "pl_job_run",
	"properties": {
		"activities": [
			{
				"name": "run_all_events",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Set var_event_count",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(int(variables('var_event_count')),0)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Check event count in loop",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "SELECT dbo.fn_get_event_count() as event_count",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "dst_sql_framework",
									"type": "DatasetReference",
									"parameters": {
										"par_secret_name": {
											"value": "@pipeline().globalParameters.gpar_kv_sql_server_password",
											"type": "Expression"
										},
										"par_sel_server_name": {
											"value": "@pipeline().globalParameters.gpar_sql_server_name",
											"type": "Expression"
										},
										"par_framework_db_name": {
											"value": "@pipeline().globalParameters.gpar_framework_db_name",
											"type": "Expression"
										},
										"par_key_vault_service": {
											"value": "@pipeline().globalParameters.gpar_key_vault_service_name",
											"type": "Expression"
										}
									}
								}
							}
						},
						{
							"name": "Set event count",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Check event count in loop",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_event_count",
								"value": {
									"value": "@string(activity('Check event count in loop').output.firstRow.event_count)\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Check if events exist",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set event count",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(int(variables('var_event_count')), 0)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Execute generic pipeline",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "pl_gen_run_pipeline",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"job_run_id": {
													"value": "@variables('job_run_id')",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "trigger procedures events",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Check if events exist",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[trigger_event]",
								"storedProcedureParameters": {
									"job_run_id": {
										"value": {
											"value": "@int(variables('job_run_id'))",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "conn_adfframework",
								"type": "LinkedServiceReference",
								"parameters": {
									"par_secret_name": {
										"value": "@pipeline().globalParameters.gpar_kv_sql_server_password",
										"type": "Expression"
									},
									"par_sql_server_name": {
										"value": "@pipeline().globalParameters.gpar_sql_server_name",
										"type": "Expression"
									},
									"par_framework_db_name": {
										"value": "@pipeline().globalParameters.gpar_framework_db_name",
										"type": "Expression"
									},
									"KeyVaultService": {
										"value": "@pipeline().globalParameters.gpar_key_vault_service_name",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "trigger files event",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Check if events exist",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[trigger_file_event]",
								"storedProcedureParameters": {
									"job_run_id": {
										"value": {
											"value": "@int(variables('job_run_id'))",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "conn_adfframework",
								"type": "LinkedServiceReference",
								"parameters": {
									"par_secret_name": {
										"value": "@pipeline().globalParameters.gpar_kv_sql_server_password",
										"type": "Expression"
									},
									"par_sql_server_name": {
										"value": "@pipeline().globalParameters.gpar_sql_server_name",
										"type": "Expression"
									},
									"par_framework_db_name": {
										"value": "@pipeline().globalParameters.gpar_framework_db_name",
										"type": "Expression"
									},
									"KeyVaultService": {
										"value": "@pipeline().globalParameters.gpar_key_vault_service_name",
										"type": "Expression"
									}
								}
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "Set var_event_count",
				"description": "",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set job_run_id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "var_event_count",
					"value": "1"
				}
			},
			{
				"name": "Set job_run_id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Start new job",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "job_run_id",
					"value": {
						"value": "@string(activity('Start new job').output.firstRow.job_run_id)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "init job or restart",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.par_restart_job, 0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Start new job_copy1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.03:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "DECLARE @job_run_id int;\nEXEC dbo.init_daily_load @job_run_id OUTPUT;\n\nSELECT @job_run_id as job_run_id",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "dst_sql_framework",
									"type": "DatasetReference",
									"parameters": {
										"par_secret_name": "frameworkUserPassword",
										"par_sel_server_name": "eundadf01.database.windows.net",
										"par_framework_db_name": "eundadf01-framework",
										"par_key_vault_service": "https://eund-kv.vault.azure.net/"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Start new job",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "init job or restart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.03:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@if(equals(pipeline().parameters.par_restart_job, 0)\n, 'DECLARE job_run_id int;\nEXEC dbo.init_daily_load job_restart_ind = 0, job_run_id OUTPUT;'\n, 'DECLARE job_run_id int;\nEXEC dbo.init_daily_load job_restart_ind = 1, job_run_id OUTPUT;'\n)",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dst_sql_framework",
						"type": "DatasetReference",
						"parameters": {
							"par_secret_name": {
								"value": "@pipeline().globalParameters.gpar_kv_sql_server_password",
								"type": "Expression"
							},
							"par_sel_server_name": {
								"value": "@pipeline().globalParameters.gpar_sql_server_name",
								"type": "Expression"
							},
							"par_framework_db_name": {
								"value": "@pipeline().globalParameters.gpar_framework_db_name",
								"type": "Expression"
							},
							"par_key_vault_service": {
								"value": "@pipeline().globalParameters.gpar_key_vault_service_name",
								"type": "Expression"
							}
						}
					}
				}
			}
		],
		"parameters": {
			"par_restart_job": {
				"type": "int",
				"defaultValue": 0
			}
		},
		"variables": {
			"var_event_count": {
				"type": "String",
				"defaultValue": "1"
			},
			"job_run_id": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-11-23T16:21:09Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}